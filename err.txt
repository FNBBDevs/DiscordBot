import random

class Let_me_know_if_this_value_is_true_or_false:
		def __init__(self, val, size=1000, noise=0.4):
				self.val   = val
				self.size  = size
				self.noise = noise

		def set_val(self, val):
				self.val = val
				return self

		def set_noise(self, val):
				self.noise = val
				return self

		def set_size(self, val):
				self.size = val
				return self

		def run(self):
				bias	   = True
				confidence = 0.80
				chars	 = f"!QAZ@WSXEDC$RFV%TGB^YHN{chr(38)}UJM*IK<(OL>)P:?_+|1qazxsw23edcvfr45tgbnhy67ujm,ki89ol.;p0-[=]"
				determine  = [bias if random.random() < abs(confidence - self.noise) else True if random.random() < self.noise else False if random.random() > (1.00 - self.noise) else chars[random.randint(0, len(chars)-1)] for _ in range(self.size)]
				results = {k: v for k, v in sorted(self.count(determine).items(), key=lambda item: item[1], reverse=True)}
				return list(results.keys())[0] == "True"

		def count(self, vals):
				t,f=0,0
				for val in vals:
						if val==True:t+=1
						elif val==False:f+=1
				return {"True":t,"False":f}

lmk = Let_me_know_if_this_value_is_true_or_false("True")
print(lmk.run())